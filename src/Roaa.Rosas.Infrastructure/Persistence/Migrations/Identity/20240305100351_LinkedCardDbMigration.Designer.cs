// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Roaa.Rosas.Infrastructure.Persistence.DbContexts;

#nullable disable

namespace Roaa.Rosas.Infrastructure.Persistence.Migrations.Identity
{
    [DbContext(typeof(RosasDbContext))]
    [Migration("20240305100351_LinkedCardDbMigration")]
    partial class LinkedCardDbMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Roaa.Rosas.Auditing.Models.AuditEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Action");

                    b.Property<string>("Client")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Client");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<string>("ExternalSystem")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ExternalSystem");

                    b.Property<string>("JsonData")
                        .HasColumnType("longtext")
                        .HasColumnName("JsonData");

                    b.Property<string>("Method")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Method");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint")
                        .HasColumnName("TimeStamp");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserId");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserType");

                    b.HasKey("Id");

                    b.ToTable("rosas_audits", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("identity_roles", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("identity_role_claims", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLockedBySystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Locale")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("MetaData")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("identity_users", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("identity_user_claims", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("identity_user_logins", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("identity_user_roles", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("identity_user_tokens", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("rosas_clients", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.EntityAdminPrivilege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<bool>("IsLockedBySystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMajor")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_entity_admin_privileges", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.ExternalSystemDispatch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DispatchDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("rosas_external_system_dispatches", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int>("FeatureReset")
                        .HasColumnType("int");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("rosas_features", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.GenericAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("KeyGroup")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("rosas_generic_attributes", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.JobTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("CreationDate")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_job_tasks", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.LinkedCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("EntityType")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodType")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("rosas_linked_cards", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AltProcessedPaymentId")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("AuthorizedPaymentResult")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CapturedPaymentResult")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CreatedByUserType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CurrencyRate")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<bool>("IsMustChangePlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OrderIntent")
                        .HasColumnType("int");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderSubtotalExclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("OrderSubtotalInclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("OrderTotal")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("PayerUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PayerUserType")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodCard")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("PaymentMethodType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentProcessingExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("ProcessedPaymentId")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ProcessedPaymentReference")
                        .HasColumnType("longtext");

                    b.Property<string>("ProcessedPaymentReferenceType")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ProcessedPaymentResult")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserCurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(true)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("UserCurrencyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("OrderNumber");

                    b.HasIndex("TenantId");

                    b.ToTable("rosas_orders", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("CustomPeriodInDays")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("PriceExclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("PriceInclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TrialPeriodInDays")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPriceExclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("UnitPriceInclTax")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("rosas_order_items", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AlternativePlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AlternativePlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsLockedBySystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TenancyType")
                        .HasColumnType("int");

                    b.Property<int>("TrialPeriodInDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("rosas_plans", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("char(36)");

                    b.Property<int>("FeatureReset")
                        .HasColumnType("int");

                    b.Property<int?>("FeatureUnit")
                        .HasColumnType("int");

                    b.Property<int?>("Limit")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UnitDisplayName")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("PlanId");

                    b.ToTable("rosas_plan_features", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("IsLockedBySystem")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("rosas_plan_prices", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActivationUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ApiKey")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreationUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DeactivationUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DefaultHealthCheckUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DeletionUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("HealthStatusInformerUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SubscriptionDowngradeUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SubscriptionResetUrl")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SubscriptionUpgradeUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TrialPeriodInDays")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrialPlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TrialPlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TrialType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("rosas_products", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("rosas_settings", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Specification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("InputType")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSubscribed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUserEditable")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NormalizedSystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RegularExpression")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ValidationFailureDescription")
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("rosas_specifications", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SpecificationValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpecificationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("SpecificationId");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("TenantId");

                    b.ToTable("rosas_specification_values", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomPeriodInDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExpectedResourceStatus")
                        .HasColumnType("int");

                    b.Property<string>("HealthCheckUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("HealthCheckUrlIsOverridden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLimitsResetDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastResetDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ResetOperationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionCycleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SubscriptionMode")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionPlanChangeStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionResetStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("PlanPriceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TenantId");

                    b.ToTable("rosas_subscriptions", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionAutoRenewal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<string>("PlanDisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("UpcomingAutoRenewalsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("PlanPriceId");

                    b.ToTable("rosas_subscription_auto_renewals", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionAutoRenewalHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AutoRenewalEnabledByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("AutoRenewalEnabledDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("rosas_subscription_auto_renewal_histories", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionCycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PlanDisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("rosas_subscription_cycles", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("RemainingUsage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SubscriptionFeatureCycleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("PlanFeatureId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("rosas_subscription_features", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionFeatureCycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FeatureDisplayName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("char(36)");

                    b.Property<int>("FeatureReset")
                        .HasColumnType("int");

                    b.Property<int>("FeatureType")
                        .HasColumnType("int");

                    b.Property<int?>("FeatureUnit")
                        .HasColumnType("int");

                    b.Property<int?>("Limit")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<Guid>("PlanFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("RemainingUsage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SubscriptionCycleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("TotalUsage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionCycleId");

                    b.ToTable("rosas_subscription_feature_cycles", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionFeatureUsage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanFeatureId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_subscription_feature_usages", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionPlanChangeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("PlanChangeEnabledByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PlanChangeEnabledDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_subscription_plan_change_histories", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionPlanChanging", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("PlanCycle")
                        .HasColumnType("int");

                    b.Property<string>("PlanDisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("PlanPriceId");

                    b.HasIndex("SubscriptionId")
                        .IsUnique();

                    b.ToTable("rosas_subscription_plan_changes", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionTrialPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanPriceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TrialPeriodInDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId")
                        .IsUnique();

                    b.ToTable("rosas_subscription_trial_periods", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CreatedByUserType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid>("LastOrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenants", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantCreationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CreatedByUserType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ModifiedByUserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NormalizedSystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_creation_requests", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantCreationRequestSpecification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SpecificationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantCreationRequestId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("TenantCreationRequestId");

                    b.ToTable("rosas_tenant_creation_request_specifications", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantHealthCheckHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("HealthCheckUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_health_check_history", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantHealthStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("HealthCheckUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("HealthyCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHealthy")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastCheckDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<int>("UnhealthyCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_health_statuses", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantProcessHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ExpectedResourceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OwnerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ProcessType")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<int>("UpdatesCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_process_history", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantStatusHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExpectedResourceStatus")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OwnerType")
                        .HasColumnType("int");

                    b.Property<int>("PreviousStatus")
                        .HasColumnType("int");

                    b.Property<int>("PreviousStep")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_status_history", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantSystemName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantCreationRequestId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TenantNormalizedSystemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("rosas_tenant_system_names", (string)null);
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.RoleClaim", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserClaim", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserLogin", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserRole", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Identity.UserToken", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Feature", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Product", "Product")
                        .WithMany("Features")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Order", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Tenant", "Tenant")
                        .WithMany("Orders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.OrderItem", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithMany("OrderItems")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Plan", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Product", "Product")
                        .WithMany("Plans")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanFeature", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Feature", "Feature")
                        .WithMany("Plans")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Plan", "Plan")
                        .WithMany("Features")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanPrice", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Plan", "Plan")
                        .WithMany("Prices")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Product", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Client", "Client")
                        .WithMany("Products")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Specification", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Product", "Product")
                        .WithMany("Specifications")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SpecificationValue", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Specification", "Specification")
                        .WithMany("Values")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithMany("SpecificationsValues")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Tenant", "Tenant")
                        .WithMany("SpecificationsValues")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Specification");

                    b.Navigation("Subscription");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Subscription", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.PlanPrice", "PlanPrice")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanPriceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Product", "Product")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Tenant", "Tenant")
                        .WithMany("Subscriptions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("PlanPrice");

                    b.Navigation("Product");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionAutoRenewal", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithOne("AutoRenewal")
                        .HasForeignKey("Roaa.Rosas.Domain.Entities.Management.SubscriptionAutoRenewal", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Plan", "Plan")
                        .WithMany("SubscriptionAutoRenewals")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.PlanPrice", "PlanPrice")
                        .WithMany("SubscriptionAutoRenewals")
                        .HasForeignKey("PlanPriceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("PlanPrice");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionCycle", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithMany("SubscriptionCycles")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionFeature", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Feature", "Feature")
                        .WithMany("SubscriptionFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.PlanFeature", "PlanFeature")
                        .WithMany("SubscriptionFeatures")
                        .HasForeignKey("PlanFeatureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithMany("SubscriptionFeatures")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("PlanFeature");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionFeatureCycle", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.SubscriptionCycle", "SubscriptionCycle")
                        .WithMany("SubscriptionFeaturesCycles")
                        .HasForeignKey("SubscriptionCycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SubscriptionCycle");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionPlanChanging", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Plan", "Plan")
                        .WithMany("SubscriptionPlanChanges")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.PlanPrice", "PlanPrice")
                        .WithMany("SubscriptionPlanChanges")
                        .HasForeignKey("PlanPriceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithOne("SubscriptionPlanChanging")
                        .HasForeignKey("Roaa.Rosas.Domain.Entities.Management.SubscriptionPlanChanging", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("PlanPrice");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionTrialPeriod", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithOne("TrialPeriod")
                        .HasForeignKey("Roaa.Rosas.Domain.Entities.Management.SubscriptionTrialPeriod", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantCreationRequestSpecification", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.TenantCreationRequest", "TenantCreationRequest")
                        .WithMany("Specifications")
                        .HasForeignKey("TenantCreationRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenantCreationRequest");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantHealthStatus", b =>
                {
                    b.HasOne("Roaa.Rosas.Domain.Entities.Management.Subscription", "Subscription")
                        .WithOne("HealthCheckStatus")
                        .HasForeignKey("Roaa.Rosas.Domain.Entities.Management.TenantHealthStatus", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Client", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Feature", b =>
                {
                    b.Navigation("Plans");

                    b.Navigation("SubscriptionFeatures");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Plan", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Prices");

                    b.Navigation("SubscriptionAutoRenewals");

                    b.Navigation("SubscriptionPlanChanges");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanFeature", b =>
                {
                    b.Navigation("SubscriptionFeatures");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.PlanPrice", b =>
                {
                    b.Navigation("SubscriptionAutoRenewals");

                    b.Navigation("SubscriptionPlanChanges");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Product", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Plans");

                    b.Navigation("Specifications");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Specification", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Subscription", b =>
                {
                    b.Navigation("AutoRenewal");

                    b.Navigation("HealthCheckStatus");

                    b.Navigation("OrderItems");

                    b.Navigation("SpecificationsValues");

                    b.Navigation("SubscriptionCycles");

                    b.Navigation("SubscriptionFeatures");

                    b.Navigation("SubscriptionPlanChanging");

                    b.Navigation("TrialPeriod");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.SubscriptionCycle", b =>
                {
                    b.Navigation("SubscriptionFeaturesCycles");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.Tenant", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SpecificationsValues");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Roaa.Rosas.Domain.Entities.Management.TenantCreationRequest", b =>
                {
                    b.Navigation("Specifications");
                });
#pragma warning restore 612, 618
        }
    }
}
